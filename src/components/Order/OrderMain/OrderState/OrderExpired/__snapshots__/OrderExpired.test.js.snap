// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderExpired renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
>
    [Function]
</I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <OrderAlert />,
        <h2
          className="title"
>
          order.expired1
</h2>,
        <Trans
          i18nKey="order.expired2"
>
          <h3
                    className="subtitle"
          >
                    Your order is expired. You can make a
                     
                    <a
                              className="new-order-link"
                              href="/"
                    >
                              new exchange order
                    </a>
                    .
          </h3>
</Trans>,
        <h4
          className="warning"
          data-original-title="order.expired3"
          data-placement="top"
          data-toggle="tooltip"
>
          order.expired4
</h4>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "order.expired1",
          "className": "title",
        },
        "ref": null,
        "rendered": "order.expired1",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h3
            className="subtitle"
>
            Your order is expired. You can make a
             
            <a
                        className="new-order-link"
                        href="/"
            >
                        new exchange order
            </a>
            .
</h3>,
          "i18nKey": "order.expired2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Your order is expired. You can make a",
              " ",
              <a
                className="new-order-link"
                href="/"
>
                new exchange order
</a>,
              ".",
            ],
            "className": "subtitle",
          },
          "ref": null,
          "rendered": Array [
            "Your order is expired. You can make a",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "new exchange order",
                "className": "new-order-link",
                "href": "/",
              },
              "ref": null,
              "rendered": "new exchange order",
              "type": "a",
            },
            ".",
          ],
          "type": "h3",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "order.expired4",
          "className": "warning",
          "data-original-title": "order.expired3",
          "data-placement": "top",
          "data-toggle": "tooltip",
        },
        "ref": null,
        "rendered": "order.expired4",
        "type": "h4",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <OrderAlert />,
          <h2
            className="title"
>
            order.expired1
</h2>,
          <Trans
            i18nKey="order.expired2"
>
            <h3
                        className="subtitle"
            >
                        Your order is expired. You can make a
                         
                        <a
                                    className="new-order-link"
                                    href="/"
                        >
                                    new exchange order
                        </a>
                        .
            </h3>
</Trans>,
          <h4
            className="warning"
            data-original-title="order.expired3"
            data-placement="top"
            data-toggle="tooltip"
>
            order.expired4
</h4>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "order.expired1",
            "className": "title",
          },
          "ref": null,
          "rendered": "order.expired1",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h3
              className="subtitle"
>
              Your order is expired. You can make a
               
              <a
                            className="new-order-link"
                            href="/"
              >
                            new exchange order
              </a>
              .
</h3>,
            "i18nKey": "order.expired2",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Your order is expired. You can make a",
                " ",
                <a
                  className="new-order-link"
                  href="/"
>
                  new exchange order
</a>,
                ".",
              ],
              "className": "subtitle",
            },
            "ref": null,
            "rendered": Array [
              "Your order is expired. You can make a",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "new exchange order",
                  "className": "new-order-link",
                  "href": "/",
                },
                "ref": null,
                "rendered": "new exchange order",
                "type": "a",
              },
              ".",
            ],
            "type": "h3",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "order.expired4",
            "className": "warning",
            "data-original-title": "order.expired3",
            "data-placement": "top",
            "data-toggle": "tooltip",
          },
          "ref": null,
          "rendered": "order.expired4",
          "type": "h4",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
